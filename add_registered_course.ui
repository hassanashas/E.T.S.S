<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>Add_Registered_Course_Window</class>
 <widget class="QMainWindow" name="Add_Registered_Course_Window">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>520</width>
    <height>419</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>MainWindow</string>
  </property>
  <property name="styleSheet">
   <string notr="true">*{
background-color: white;
color: black;
}

.QLineEdit
{
border-style: none; 
border-bottom: 1px solid; 
}

QLineEdit:focus
{
background-color: rgb(246, 255, 252);
}


.QComboBox {
    border: 1px solid gray;
    border-radius: 3px;
    padding: 1px 18px 1px 3px;
    min-width: 6em;
background-color: white;
}

.QComboBox:editable {
    background: white;
}

.QComboBox:!editable, QComboBox::drop-down:editable {
     background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                 stop: 0 #E1E1E1, stop: 0.4 #DDDDDD,
                                 stop: 0.5 #D8D8D8, stop: 1.0 #D3D3D3);
}

/* QComboBox gets the &quot;on&quot; state when the popup is open */
.QComboBox:!editable:on, QComboBox::drop-down:editable:on {
    background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                stop: 0 #D3D3D3, stop: 0.4 #D8D8D8,
                                stop: 0.5 #DDDDDD, stop: 1.0 #E1E1E1);
}

.QComboBox:on { /* shift the text when the popup opens */
    padding-top: 3px;
    padding-left: 4px;
}

.QComboBox::drop-down {
    subcontrol-origin: padding;
    subcontrol-position: top right;
    width: 15px;

    border-left-width: 1px;
    border-left-color: darkgray;
    border-left-style: solid; /* just a single line */
    border-top-right-radius: 3px; /* same radius as the QComboBox */
    border-bottom-right-radius: 3px;
}

.QPushButton {
background-color: red;
    border-style: outset;
    border-radius: 10px;
    font: bold 14px;
    min-width: 10em;
    padding: 6px;
}
.QPushButton:pressed {
    background-color: rgb(224, 0, 0);
    border-style: inset;
}</string>
  </property>
  <widget class="QWidget" name="centralwidget">
   <property name="styleSheet">
    <string notr="true">*
{
background-color: white;
}


QLineEdit:focus
{
background-color: rgb(246, 255, 252);
}

.label
{
margin-right: 20px;
}</string>
   </property>
   <layout class="QVBoxLayout" name="verticalLayout">
    <item>
     <widget class="QFrame" name="frame">
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
      <layout class="QHBoxLayout" name="horizontalLayout">
       <item>
        <widget class="QLabel" name="label">
         <property name="font">
          <font>
           <family>Arial</family>
           <pointsize>12</pointsize>
           <weight>75</weight>
           <bold>true</bold>
          </font>
         </property>
         <property name="text">
          <string>Add New Registration Course</string>
         </property>
        </widget>
       </item>
      </layout>
     </widget>
    </item>
    <item alignment="Qt::AlignLeft">
     <widget class="QFrame" name="frame_4">
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
      <layout class="QHBoxLayout" name="horizontalLayout_4">
       <item alignment="Qt::AlignLeft">
        <widget class="QLabel" name="label_4">
         <property name="font">
          <font>
           <family>Arial</family>
           <pointsize>10</pointsize>
          </font>
         </property>
         <property name="styleSheet">
          <string notr="true">margin-right: 70px;
</string>
         </property>
         <property name="text">
          <string>Section</string>
         </property>
        </widget>
       </item>
       <item alignment="Qt::AlignLeft">
        <widget class="QComboBox" name="add_registration_section">
         <property name="minimumSize">
          <size>
           <width>119</width>
           <height>30</height>
          </size>
         </property>
         <property name="font">
          <font>
           <family>Arial</family>
           <pointsize>10</pointsize>
          </font>
         </property>
         <property name="styleSheet">
          <string notr="true">QComboBox {
    border: 1px solid gray;
    border-radius: 3px;
    padding: 1px 18px 1px 3px;
    min-width: 6em;
background-color: white;
}

QComboBox:editable {
    background: white;
}

QComboBox:!editable, QComboBox::drop-down:editable {
     background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                 stop: 0 #E1E1E1, stop: 0.4 #DDDDDD,
                                 stop: 0.5 #D8D8D8, stop: 1.0 #D3D3D3);
}

/* QComboBox gets the &quot;on&quot; state when the popup is open */
QComboBox:!editable:on, QComboBox::drop-down:editable:on {
    background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                stop: 0 #D3D3D3, stop: 0.4 #D8D8D8,
                                stop: 0.5 #DDDDDD, stop: 1.0 #E1E1E1);
}

QComboBox:on { /* shift the text when the popup opens */
    padding-top: 3px;
    padding-left: 4px;
}

QComboBox::drop-down {
    subcontrol-origin: padding;
    subcontrol-position: top right;
    width: 15px;

    border-left-width: 1px;
    border-left-color: darkgray;
    border-left-style: solid; /* just a single line */
    border-top-right-radius: 3px; /* same radius as the QComboBox */
    border-bottom-right-radius: 3px;
}
</string>
         </property>
        </widget>
       </item>
      </layout>
     </widget>
    </item>
    <item alignment="Qt::AlignLeft">
     <widget class="QFrame" name="frame_2">
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
      <layout class="QHBoxLayout" name="horizontalLayout_2">
       <item alignment="Qt::AlignLeft">
        <widget class="QLabel" name="label_2">
         <property name="font">
          <font>
           <family>Arial</family>
           <pointsize>10</pointsize>
          </font>
         </property>
         <property name="styleSheet">
          <string notr="true">margin-right: 70px;
</string>
         </property>
         <property name="text">
          <string>Course</string>
         </property>
        </widget>
       </item>
       <item alignment="Qt::AlignLeft">
        <widget class="QComboBox" name="add_registration_course">
         <property name="minimumSize">
          <size>
           <width>119</width>
           <height>30</height>
          </size>
         </property>
         <property name="font">
          <font>
           <family>Arial</family>
           <pointsize>10</pointsize>
          </font>
         </property>
         <property name="styleSheet">
          <string notr="true">QComboBox {
    border: 1px solid gray;
    border-radius: 3px;
    padding: 1px 18px 1px 3px;
    min-width: 6em;
background-color: white;
}

QComboBox:editable {
    background: white;
}

QComboBox:!editable, QComboBox::drop-down:editable {
     background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                 stop: 0 #E1E1E1, stop: 0.4 #DDDDDD,
                                 stop: 0.5 #D8D8D8, stop: 1.0 #D3D3D3);
}

/* QComboBox gets the &quot;on&quot; state when the popup is open */
QComboBox:!editable:on, QComboBox::drop-down:editable:on {
    background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                stop: 0 #D3D3D3, stop: 0.4 #D8D8D8,
                                stop: 0.5 #DDDDDD, stop: 1.0 #E1E1E1);
}

QComboBox:on { /* shift the text when the popup opens */
    padding-top: 3px;
    padding-left: 4px;
}

QComboBox::drop-down {
    subcontrol-origin: padding;
    subcontrol-position: top right;
    width: 15px;

    border-left-width: 1px;
    border-left-color: darkgray;
    border-left-style: solid; /* just a single line */
    border-top-right-radius: 3px; /* same radius as the QComboBox */
    border-bottom-right-radius: 3px;
}
</string>
         </property>
        </widget>
       </item>
      </layout>
     </widget>
    </item>
    <item alignment="Qt::AlignLeft">
     <widget class="QFrame" name="frame_3">
      <property name="styleSheet">
       <string notr="true"/>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
      <layout class="QHBoxLayout" name="horizontalLayout_3">
       <item alignment="Qt::AlignLeft">
        <widget class="QLabel" name="label_3">
         <property name="font">
          <font>
           <family>Arial</family>
           <pointsize>10</pointsize>
          </font>
         </property>
         <property name="styleSheet">
          <string notr="true">margin-right: 70px;
</string>
         </property>
         <property name="text">
          <string>Teacher</string>
         </property>
        </widget>
       </item>
       <item alignment="Qt::AlignLeft">
        <widget class="QComboBox" name="add_registration_teacher">
         <property name="minimumSize">
          <size>
           <width>119</width>
           <height>30</height>
          </size>
         </property>
         <property name="font">
          <font>
           <family>Arial</family>
           <pointsize>10</pointsize>
          </font>
         </property>
         <property name="styleSheet">
          <string notr="true">QComboBox {
    border: 1px solid gray;
    border-radius: 3px;
    padding: 1px 18px 1px 3px;
    min-width: 6em;
background-color: white;
}

QComboBox:editable {
    background: white;
}

QComboBox:!editable, QComboBox::drop-down:editable {
     background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                 stop: 0 #E1E1E1, stop: 0.4 #DDDDDD,
                                 stop: 0.5 #D8D8D8, stop: 1.0 #D3D3D3);
}

/* QComboBox gets the &quot;on&quot; state when the popup is open */
QComboBox:!editable:on, QComboBox::drop-down:editable:on {
    background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                stop: 0 #D3D3D3, stop: 0.4 #D8D8D8,
                                stop: 0.5 #DDDDDD, stop: 1.0 #E1E1E1);
}

QComboBox:on { /* shift the text when the popup opens */
    padding-top: 3px;
    padding-left: 4px;
}

QComboBox::drop-down {
    subcontrol-origin: padding;
    subcontrol-position: top right;
    width: 15px;

    border-left-width: 1px;
    border-left-color: darkgray;
    border-left-style: solid; /* just a single line */
    border-top-right-radius: 3px; /* same radius as the QComboBox */
    border-bottom-right-radius: 3px;
}
</string>
         </property>
        </widget>
       </item>
      </layout>
     </widget>
    </item>
    <item>
     <widget class="QFrame" name="frame_5">
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
      <layout class="QHBoxLayout" name="horizontalLayout_5">
       <item alignment="Qt::AlignHCenter">
        <widget class="QPushButton" name="add_registration_submit">
         <property name="minimumSize">
          <size>
           <width>182</width>
           <height>40</height>
          </size>
         </property>
         <property name="styleSheet">
          <string notr="true">QPushButton {
   color: #fff;
  background-color: #5cb85c;
  border-color: #4cae4c;
}
QPushButton:hover {
    color: #fff;
  background-color: #449d44;
  border-color: #255625;
}

QPushButton:focus
{
color: #fff;
  background-color: #449d44;
  border-color: #398439;
}</string>
         </property>
         <property name="text">
          <string>Add Registration Course</string>
         </property>
        </widget>
       </item>
      </layout>
     </widget>
    </item>
   </layout>
  </widget>
 </widget>
 <resources>
  <include location="icons_form.qrc"/>
 </resources>
 <connections/>
</ui>
